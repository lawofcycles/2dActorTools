module.exports = function autocrop(margin) {
    var w = this.bitmap.width;
    var h = this.bitmap.height;
    var l = findLeftSide(this, w, h) - margin;
    var r = findRightSide(this, w, h) + margin;
    var t = findTopSide(this, w, h) - margin;
    var b = findBottomSide(this, w, h) + margin;
    l = Math.min(w - 1, Math.max(0, l));
    r = Math.min(w - 1, Math.max(0, r));
    t = Math.min(h - 1, Math.max(0, t));
    b = Math.min(h - 1, Math.max(0, b));

    this.crop(l, t, w - (w - r + l), h - (h - b + t));
    return this;
};

function findLeftSide(scope, w, h) {
    for (let x = 0; x < w; x++) {
        for (let y = 0; y < h; y++) {
            var clr = scope.getPixelColor(x, y);
            var rgba = scope.constructor.intToRGBA(clr);

            if (rgba.a !== 0) {
                return x;
            }
        }
    }
}

function findRightSide(scope, w, h) {
    for (let x = w; x > 0; x--) {
        for (let y = 0; y < h; y++) {
            var clr = scope.getPixelColor(x, y);
            var rgba = scope.constructor.intToRGBA(clr);

            if (rgba.a !== 0) {
                return x;
            }
        }
    }
}

function findTopSide(scope, w, h) {
    for (let y = 0; y < h; y++) {
        for (let x = 0; x < w; x++) {
            var clr = scope.getPixelColor(x, y);
            var rgba = scope.constructor.intToRGBA(clr);

            if (rgba.a !== 0) {
                return y;
            }
        }
    }
}

function findBottomSide(scope, w, h) {
    for (let y = h; y > 0; y--) {
        for (let x = 0; x < w; x++) {
            var clr = scope.getPixelColor(x, y);
            var rgba = scope.constructor.intToRGBA(clr);

            if (rgba.a !== 0) {
                return y;
            }
        }
    }
}